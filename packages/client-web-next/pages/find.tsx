import { useState, useEffect } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Find.module.scss";
import List from "../components/List";
import Top from "../components/Top";
import Nav from "../components/Nav";
import Footer from "../components/Footer";
import { findSiteData, FindSiteQuery } from "../globals/apis";
import { SiteContext } from "../hooks/SiteContext";
import type { SiteListResponse } from "../types/site";
import { useQuery, NetworkStatus } from "@apollo/client";
import { FIND_QUERY } from "../libs/gql";

const queryDetail: FindSiteQuery = {
  size: 20,
  page: 1,
  type: undefined,
};

export async function getStaticProps() {
  const site = await findSiteData(queryDetail);
  return {
    props: {
      site,
    },
  };
}

type FindProps = {};

const Find: NextPage<FindProps> = ({}: FindProps) => {
  const { loading, error, data, fetchMore, networkStatus } = useQuery(
    FIND_QUERY,
    {
      variables: {},
      // Setting this value to true will make the component rerender when
      // the "networkStatus" changes, so we are able to know if it is fetching
      // more data
      notifyOnNetworkStatusChange: true,
    }
  );

  console.log("find data", data);

  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;

  const loadMorePosts = () => {
    fetchMore({
      variables: {
        skip: 0,
      },
    });
  };

  //   const [list, setList] = useState(site.list);
  //   const [total, setTotal] = useState(site.total);
  //   const [query, setQuery] = useState(queryDetail);
  //   const context = { list, setList, query, setQuery, total, setTotal };
  //   useEffect(() => {
  //     findSiteData(query).then((res) => {
  //       console.log("findSite update:", res);
  //       setList(res.list);
  //       setTotal(res.total);
  //     });
  //   }, [query]);
  const context = {};
  return (
    <div className={styles.container}>
      <Head>
        <title>vue.design</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <Top />
      </header>
      <SiteContext.Provider value={context}>
        <section className={styles.main}>
          <Nav />
        </section>
        <List type="find" />
      </SiteContext.Provider>
      <Footer />
    </div>
  );
};

export default Find;
